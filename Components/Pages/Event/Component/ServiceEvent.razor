@page "/Event/Component/Service"
<PageTitle>Service功能型容器</PageTitle>
<Amis Data="GetObj()"></Amis>

@code {

    private object GetObj()
    {
        var data = new
        {
            type = "page",
            title = "Service功能型容器",
            regions = new object[] { "body", "toolbar", "header" },
            body = new object[]
            {
                new
                {
                    type = "tpl",
                    tpl = "事件",
                    inline = false,
                    wrapperComponent = "h2"
                },
                new
                {
                    type = "tpl",
                    tpl = "<code>fetchInited</code> 事件",
                    inline = false,
                    wrapperComponent = "h3"
                },
                new
                {
                    type = "action",
                    level = "success",
                    label = "fetchInited",
                    actionType = "dialog",
                    dialog = new
                    {
                        title = "fetchInited",
                        body = new object[]
                        {
                            new
                            {
                                type = "service",
                                name = "service-api",
                                api = "/api/mock/page/initData",
                                body = new
                                {
                                    type = "panel",
                                    title = "$title",
                                    body = "现在是：${date}"
                                },
                                onEvent = new
                                {
                                    fetchInited = new
                                    {
                                        actions = new object[]
                                        {
                                            new
                                            {
                                                actionType = "toast",
                                                expression = "${!__response.error}",
                                                args = new
                                                {
                                                    msgType = "success",
                                                    msg = "API inited: <b>${date}</b>"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                new
                {
                    type = "divider"
                },
                new
                {
                    type = "tpl",
                    tpl = "对于amis的接口标准来说, status不为0, 则视为请求失败. 该事件额外提供了<code>__response</code>参数用于区分接口状态码实际是200成功, 但接口中的status字段不为0的情况(接口状态码如果为非200, 则不会触发该事件)",
                    inline = false
                },
                new
                {
                    type = "action",
                    level = "danger",
                    label = "fetchInited(failed)",
                    actionType = "dialog",
                    dialog = new
                    {
                        title = "fetchInited(failed)",
                        body = new object[]
                        {
                            new
                            {
                                type = "service",
                                name = "service-api",
                                id = "service-failed",
                                api = "/api/mock/service/fail",
                                body = new
                                {
                                    type = "panel",
                                    title = "$title",
                                    body = new object[]
                                    {
                                        new
                                        {
                                            type = "tpl",
                                            tpl = "<strong>toast消息提示设置了触发条件, 当接口失败时不显示toast, 所以结果只会有1个全局默认的toast, 如果不设置条件则会弹出2个toast.</strong>",
                                            inline = false
                                        },
                                        new
                                        {
                                            type = "tpl",
                                            tpl = "错误信息是: ${__response.msg}",
                                            inline = false
                                        }
                                    }
                                },
                                onEvent = new
                                {
                                    fetchInited = new
                                    {
                                        actions = new object[]
                                        {
                                            new
                                            {
                                                actionType = "setValue",
                                                args = new
                                                {
                                                    value = "${event.data}"
                                                }
                                            },
                                            new
                                            {
                                                actionType = "toast",
                                                expression = "${!__response.error}",
                                                args = new
                                                {
                                                    msgType = "success",
                                                    msg = "API inited: <b>${date}</b>"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                new
                {
                    type = "divider"
                },
                new
                {
                    type = "tpl",
                    tpl = "<code>fetchSchemaInited</code> 事件",
                    inline = false,
                    wrapperComponent = "h3"
                },
                new
                {
                    type = "action",
                    level = "info",
                    label = "fetchSchemaInited",
                    actionType = "dialog",
                    dialog = new
                    {
                        title = "fetchSchemaInited",
                        body = new object[]
                        {
                            new
                            {
                                type = "service",
                                name = "service-schema-api",
                                schemaApi = "https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/service/schema?type=form",
                                onEvent = new
                                {
                                    fetchSchemaInited = new
                                    {
                                        actions = new object[]
                                        {
                                            new
                                            {
                                                actionType = "toast",
                                                args = new
                                                {
                                                    msgType = "info",
                                                    msg = "SchemaAPI inited: <b>title: ${title}</b>"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                new
                {
                    type = "divider"
                },
                new
                {
                    type = "tpl",
                    tpl = "动作",
                    inline = false,
                    wrapperComponent = "h2"
                },
                new
                {
                    type = "tpl",
                    tpl = "<code>reload</code> 动作",
                    inline = false,
                    wrapperComponent = "h3"
                },
                new
                {
                    type = "action",
                    label = "reload触发器",
                    level = "primary",
                    className = "mb-3",
                    onEvent = new
                    {
                        click = new
                        {
                            actions = new object[]
                            {
                                new
                                {
                                    actionType = "reload",
                                    componentId = "service-reload"
                                }
                            }
                        }
                    }
                },
                new
                {
                    type = "service",
                    id = "service-reload",
                    name = "service-reload",
                    api = "/api/mock/number/random",
                    body = new
                    {
                        type = "panel",
                        title = "reload动作",
                        body = "现在是：${random}"
                    }
                },
                new
                {
                    type = "divider"
                },
                new
                {
                    type = "tpl",
                    tpl = "<code>rebuild</code> 动作",
                    inline = false,
                    wrapperComponent = "h3"
                },
                new
                {
                    type = "alert",
                    body = "请选择一种构建方式生成组件",
                    level = "info",
                    showIcon = true,
                    className = "mb-3",
                    visibleOn = "this.schemaType == null"
                },
                new
                {
                    type = "button-group",
                    tiled = true,
                    className = "mb-3",
                    buttons = new object[]
                    {
                        new
                        {
                            type = "action",
                            label = "构建form",
                            icon = "fa fa-hammer",
                            onEvent = new
                            {
                                click = new
                                {
                                    actions = new object[]
                                    {
                                        new
                                        {
                                            actionType = "rebuild",
                                            componentId = "service-rebuild",
                                            args = new
                                            {
                                                schemaType = "form"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        new
                        {
                            type = "action",
                            label = "构建tabs",
                            icon = "fa fa-hammer",
                            onEvent = new
                            {
                                click = new
                                {
                                    actions = new object[]
                                    {
                                        new
                                        {
                                            actionType = "rebuild",
                                            componentId = "service-rebuild",
                                            args = new
                                            {
                                                schemaType = "tabs"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        new
                        {
                            type = "action",
                            label = "构建crud",
                            icon = "fa fa-hammer",
                            onEvent = new
                            {
                                click = new
                                {
                                    actions = new object[]
                                    {
                                        new
                                        {
                                            actionType = "rebuild",
                                            componentId = "service-rebuild",
                                            args = new
                                            {
                                                schemaType = "crud"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                new
                {
                    type = "service",
                    id = "service-rebuild",
                    name = "service-rebuild",
                    schemaApi = new
                    {
                        url = "https://3xsw4ap8wah59.cfc-execute.bj.baidubce.com/api/amis-mock/mock2/service/schema?type=${schemaType}",
                        method = "post",
                        sendOn = "this.schemaType != null"
                    }
                },
                new
                {
                    type = "divider"
                },
                new
                {
                    type = "tpl",
                    tpl = "<code>setValue</code> 动作",
                    inline = false,
                    wrapperComponent = "h3"
                },
                new
                {
                    type = "action",
                    label = "setValue触发器",
                    level = "primary",
                    className = "mb-3",
                    onEvent = new
                    {
                        click = new
                        {
                            actions = new object[]
                            {
                                new
                                {
                                    actionType = "setValue",
                                    componentId = "service-setvalue",
                                    args = new
                                    {
                                        value = new
                                        {
                                            language = new object[] { "🇨🇳 中国" }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                new
                {
                    type = "service",
                    id = "service-setvalue",
                    name = "service-setvalue",
                    data = new
                    {
                        language = new object[] { "🇺🇸 美国" }
                    },
                    body = new
                    {
                        type = "panel",
                        title = "setValue动作",
                        body = new object[]
                        {
                            new
                            {
                                type = "each",
                                name = "language",
                                items = new
                                {
                                    type = "tpl",
                                    tpl = "<span class='label label-default m-l-sm'><%= data.item %></span> "
                                }
                            }
                        }
                    }
                }
            }
        };
        return data;
    }

}
