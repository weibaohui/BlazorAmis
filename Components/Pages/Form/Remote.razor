
@page "/Form/Remote"
<PageTitle>动态数据</PageTitle>
<Amis Data="GetObj()"></Amis>

@code {
    private object GetObj()
    {
        var data = new {
    title = "动态拉取选项",
    name = "page-form-remote",
    body = new object[] {
        new {
            type = "form",
            title = "动态表单元素示例",
            name = "demo-form",
            api = "/api/mock/Form/SaveForm?waitSeconds=2",
            mode = "horizontal",
            actions = new object[] {
                new {
                    type = "submit",
                    label = "提交"
                }
            },
            body = new object[] {
                new {
                    name = "select",
                    type = "select",
                    label = "动态选项",
                    source = "/api/mock/Form/GetOptions?waitSeconds=1",
                    description = "通过接口一口气拉取选项",
                    clearable = true,
                    searchable = true
                },
                new {
                    type = "divider"
                },
                new {
                    name = "select2",
                    type = "select",
                    label = "选项自动补全",
                    autoComplete = "/api/mock/options/autoComplete2?term=$term",
                    placeholder = "请输入",
                    description = "通过接口自动补全"
                },
                new {
                    type = "divider"
                },
                new {
                    type = "input-text",
                    name = "text",
                    label = "文本提示",
                    source = "/api/mock/Form/GetOptions?waitSeconds=1",
                    placeholder = "请选择",
                    creatable = true
                },
                new {
                    type = "divider"
                },
                new {
                    name = "text2",
                    type = "input-text",
                    label = "文本自动补全",
                    clearable = true,
                    autoComplete = "/api/mock/Options/AutoComplete2?term=$term",
                    description = "通过接口自动补全"
                },
                new {
                    name = "chained",
                    type = "chained-select",
                    label = "级联选项",
                    source = "/api/mock/Options/ChainedOptions?waitSeconds=1&parentId=$parentId&level=$level&maxLevel=4&waiSeconds=1",
                    desc = "无限级别, 只要 api 返回数据就能继续往下选择. 当没有下级时请返回 null.",
                    value = "a,b"
                },
                new {
                    type = "divider"
                },
                new {
                    name = "tree",
                    showOutline = true,
                    type = "input-tree",
                    label = "动态树",
                    source = "/api/mock/options/tree?waitSeconds=1"
                },
                new {
                    type = "divider"
                },
                new {
                    name = "tree",
                    type = "input-tree",
                    label = "树懒加载",
                    multiple = true,
                    deferApi = "/api/mock/form/deferOptions?label=${label}&waitSeconds=1",
                    options = new object[] {
                        new {
                            label = "法师",
                            children = new object[] {
                                new {
                                    label = "诸葛亮",
                                    value = "zhugeliang"
                                }
                            }
                        },
                        new {
                            label = "战士",
                            defer = true
                        },
                        new {
                            label = "打野",
                            children = new object[] {
                                new {
                                    label = "李白",
                                    value = "libai"
                                },
                                new {
                                    label = "韩信",
                                    value = "hanxin"
                                },
                                new {
                                    label = "云中君",
                                    value = "yunzhongjun"
                                }
                            }
                        }
                    }
                },
                new {
                    type = "divider"
                },
                new {
                    name = "matrix",
                    type = "matrix-checkboxes",
                    label = "动态矩阵开关",
                    source = "/api/mock/Options/Matrix?waitSeconds=1"
                }
            }
        }
    }
};
        return data;
        
    }
}
